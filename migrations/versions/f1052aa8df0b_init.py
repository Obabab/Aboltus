"""init

Revision ID: f1052aa8df0b
Revises: 
Create Date: 2025-03-22 09:22:15.873545

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f1052aa8df0b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Diet_types',
    sa.Column('diet_type_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_restricted', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('diet_type_id')
    )
    op.create_table('Ingredients',
    sa.Column('ingredient_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('price_per_unit', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('unit', sa.String(length=20), nullable=False),
    sa.Column('store_name', sa.Text(), nullable=True),
    sa.Column('valid_from', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('ingredient_id')
    )
    op.create_table('Meals',
    sa.Column('meal_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('diet_type_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['diet_type_id'], ['Diet_types.diet_type_id'], ),
    sa.PrimaryKeyConstraint('meal_id')
    )
    op.create_table('Users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.String(length=64), nullable=False),
    sa.Column('weight', sa.Numeric(precision=4, scale=1), nullable=True),
    sa.Column('height', sa.Numeric(precision=4, scale=1), nullable=True),
    sa.Column('age', sa.Numeric(precision=3, scale=0), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('diet_type_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['diet_type_id'], ['Diet_types.diet_type_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('password_hash'),
    sa.UniqueConstraint('username')
    )
    op.create_table('Favorites',
    sa.Column('favorite_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('meal_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['meal_id'], ['Meals.meal_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], ),
    sa.PrimaryKeyConstraint('favorite_id')
    )
    op.create_table('MealPlans',
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('total_price', sa.Numeric(precision=12, scale=1), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], ),
    sa.PrimaryKeyConstraint('plan_id')
    )
    op.create_table('Meal_Ingredient',
    sa.Column('meal_id', sa.Integer(), nullable=False),
    sa.Column('ingredient_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['ingredient_id'], ['Ingredients.ingredient_id'], ),
    sa.ForeignKeyConstraint(['meal_id'], ['Meals.meal_id'], ),
    sa.PrimaryKeyConstraint('meal_id', 'ingredient_id')
    )
    op.create_table('Meal_PlanMeal',
    sa.Column('meal_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['meal_id'], ['Meals.meal_id'], ),
    sa.ForeignKeyConstraint(['plan_id'], ['MealPlans.plan_id'], ),
    sa.PrimaryKeyConstraint('meal_id', 'plan_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Meal_PlanMeal')
    op.drop_table('Meal_Ingredient')
    op.drop_table('MealPlans')
    op.drop_table('Favorites')
    op.drop_table('Users')
    op.drop_table('Meals')
    op.drop_table('Ingredients')
    op.drop_table('Diet_types')
    # ### end Alembic commands ###
